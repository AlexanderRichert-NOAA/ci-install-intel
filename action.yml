# This action.yml provides a GitHub Action for installing Intel Classic and
# oneAPI compilers.
# Alex Richert, April 2024
name: 'Install Intel compilers'
description: 'Installs Intel compilers through "apt" for Ubuntu runners'

inputs:
  install-classic:
    description: 'Install Intel Classic compilers (icc/icpc/ifort)'
    default: true
  classic-version:
    description: 'Set Intel Classic version'
    default: '2023.2.1'
  install-oneapi:
    description: 'Install Intel oneAPI compilers (icx/icpx/ifx)'
    default: true
  oneapi-version:
    description: 'Set Intel oneAPI version'
    default: '2023.2.1'
  install-mpi:
    description: 'Install Intel MPI libraries'
    default: false
  mpi-version:
    description: 'Set Intel MPI version (default is most recent)'
    default: '2021.10.0'
  install-openmp:
    description: 'Install Intel OpenMP libraries'
    default: false
  openmp-version:
    description: 'Set Intel OpenMP library version (default is most recent)'
    default: '2023.2.1'
  install-mkl:
    description: 'Install Intel MKL'
    default: false
  mkl-version:
    description: 'Set Intel MKL version (default is most recent)'
    default: '2023.2.0'
  env-update:
    description: 'Apply environment modifications to $GITHUB_ENV (experimental)'
    default: true
  cache:
    description: 'Cache to repository cache with actions/cache'
    default: true
  shell:
    default: bash

runs:
  using: "composite"

  steps:

    - name: "Cache setup"
      id: intel-cache
      uses: actions/cache@v4
      if: ${{ inputs.cache }}
      with:
        path: /opt/intel
        key: intel-${{ inputs.install-classic }}-${{ inputs.classic-version }}-${{ inputs.install-oneapi }}-${{ inputs.oneapi-version }}-${{ inputs.install-mpi }}-${{ inputs.mpi-version }}-${{ inputs.install-openmp }}-${{ inputs.openmp-version }}-${{ inputs.install-mkl }}-${{ inputs.mkl-version }}

    - name: "Install Intel compilers"
      if: steps.intel-cache.outputs.cache-hit != 'true'
      shell: ${{ inputs.shell }}
      run: |
        cd /tmp
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
        if [ ${{ inputs.install-classic }} == true ]; then
          COMPONENTS+=" intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic"
          if [ ! -z ${{ inputs.classic-version }} ]; then
            COMPONENTS+=-${{ inputs.classic-version }}
          fi
          COMPONENTS+=" intel-oneapi-compiler-fortran"
          if [ ! -z ${{ inputs.classic-version }} ]; then
            COMPONENTS+=-${{ inputs.classic-version }}
          fi
        fi
        if [ ${{ inputs.install-oneapi }} == true ]; then
          COMPONENTS+=" intel-oneapi-dpcpp-cpp"
          if [ ! -z ${{ inputs.oneapi-version }} ]; then
            COMPONENTS+=-${{ inputs.oneapi-version }}
          fi
          COMPONENTS+=" intel-oneapi-compiler-fortran"
          if [ ! -z ${{ inputs.oneapi-version }} ]; then
            COMPONENTS+=-${{ inputs.oneapi-version }}
          fi
        fi
        if [ ${{ inputs.install-mpi }} == true ]; then
          COMPONENTS+=" intel-oneapi-mpi-devel"
          if [ ! -z ${{ inputs.mpi-version }} ]; then
            COMPONENTS+=-${{ inputs.mpi-version }}
          fi
        fi
        if [ ${{ inputs.install-openmp }} == true ]; then
          COMPONENTS+=" intel-oneapi-openmp"
          if [ ! -z ${{ inputs.openmp-version }} ]; then
            COMPONENTS+=-${{ inputs.openmp-version }}
          fi
        fi
        if [ ${{ inputs.install-mkl }} == true ]; then
          COMPONENTS+=" intel-oneapi-mkl-devel"
          if [ ! -z ${{ inputs.mkl-version }} ]; then
            COMPONENTS+=-${{ inputs.mkl-version }}
          fi
        fi
        # Run the installation
        echo "COMPONENTS: $COMPONENTS"
        sudo apt install $COMPONENTS

    - name: "Modify environment to use Intel compilers"
      if: ${{ inputs.env-update }}
      shell: ${{ inputs.shell }}
      run: |
        # Inject environment changes into $GITHUB_ENV
        echo 'Updating $GITHUB_ENV'
        bash -c "env > /tmp/before.txt"
        bash -c ". /opt/intel/oneapi/setvars.sh && env > /tmp/after.txt"
        diff --unchanged-line-format= --old-line-format= --new-line-format='%L' /tmp/before.txt /tmp/after.txt > /tmp/update.txt || true
        cat /tmp/update.txt |& tee -a $GITHUB_ENV
